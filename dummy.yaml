- name: "setup {{component}}"
  hosts: "{{component}}"
  become: yes
  tasks:
  - name: cloning a git repository
    git:
      repo: https://github.com/srikanthhg/google-10-microservices-project.git
      dest: /tmp/google-10-microservices-project
      clone: yes
      update: yes

  - name: create hipstershop user
    ansible.builtin.user:
      name: hipstershop

  - name: Recursively remove app directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: copy app from tmp to app directory
    ansible.builtin.copy: 
      src: /tmp/google-10-microservices-project/{{component}}/
      dest: /app/
      remote_src: yes

  - name: download and install nvm
    ansible.builtin.shell: "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash"
    register: nvm_install_result

  # #{{ansible_env.HOME}} refers to the home directory of the user running the Ansible playbook on the target system. It retrieves the value of the HOME environment variable for that user.
  # - name: Display result
  #   debug:
  #     msg: "{{ansible_env.HOME}}"

  - name: nvm downloaded or not
    debug:
      msg: "{{nvm_install_result}}"

  - name: Activate nvm
    shell: ". {{ ansible_env.HOME }}/.nvm/nvm.sh"
    when: nvm_install_result.rc == 0

  - name: Set execute permission on nvm.sh
    file:
      path: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
      mode: "+x"

  - name: install nvm
    ansible.builtin.shell: "{{ ansible_env.HOME }}/.nvm/nvm.sh install --lts"
    when: nvm_install_result.rc == 0
      
  - name: Install dependencies
    ansible.builtin.shell: "npm install"
    args:
      chdir: /app/

  - name: "setup systemd {{component}} service"
    ansible.builtin.template:
      src: "{{component}}.service.j2"
      dest: "/etc/systemd/system/{{component}}.service"
    
  - name: reload systemd
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: "start and enable {{component}} service"
    ansible.builtin.service:
      name: "{{component}}"
      state: restarted
      enabled: yes